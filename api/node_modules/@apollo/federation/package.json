{
  "_from": "@apollo/federation",
  "_id": "@apollo/federation@0.11.2",
  "_inBundle": false,
  "_integrity": "sha512-MSMBGOS9lAE0K4VmV/3mkd2qfLQTGt2OcsryRNbGMXr9gUVZDtM9quD5JUQoENkz9YFwcOY9jI+i/X5J+Fcw6A==",
  "_location": "/@apollo/federation",
  "_phantomChildren": {
    "node-fetch": "2.6.0",
    "util.promisify": "1.0.0"
  },
  "_requested": {
    "escapedName": "@apollo%2ffederation",
    "fetchSpec": "latest",
    "name": "@apollo/federation",
    "raw": "@apollo/federation",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@apollo",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@apollo/federation/-/federation-0.11.2.tgz",
  "_shasum": "85f1bb87add88ee4d395b80402d09c59abd48a9c",
  "_shrinkwrap": null,
  "_spec": "@apollo/federation",
  "_where": "/home/pedro/profe_api/api",
  "author": {
    "email": "opensource@apollographql.com",
    "name": "Apollo"
  },
  "bundleDependencies": false,
  "dependencies": {
    "apollo-graphql": "^0.3.4",
    "apollo-server-env": "^2.4.3",
    "core-js": "^3.4.0",
    "lodash.xorby": "^4.7.0"
  },
  "deprecated": false,
  "description": "Apollo Federation Utilities",
  "devDependencies": {},
  "engines": {
    "node": ">=8"
  },
  "gitHead": "d49e4d2038df4f5aae824a98ddb21dca909051a9",
  "keywords": [],
  "license": "SEE LICENSE IN LICENSE.md",
  "main": "dist/index.js",
  "name": "@apollo/federation",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^14.0.2"
  },
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `Apollo Federation Utilities`\n\nThis package provides utilities for creating GraphQL microservices, which can be combined into a single endpoint through tools like [Apollo Gateway](https://github.com/apollographql/apollo-server/tree/master/packages/apollo-gateway).\n\nFor complete documentation, see the [Apollo Federation API reference](https://www.apollographql.com/docs/apollo-server/api/apollo-federation/).\n\n## Usage\n\n```js\nconst { ApolloServer, gql } = require(\"apollo-server\");\nconst { buildFederatedSchema } = require(\"@apollo/federation\");\n\nconst typeDefs = gql`\n  type Query {\n    me: User\n  }\n\n  type User @key(fields: \"id\") {\n    id: ID!\n    username: String\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    me() {\n      return { id: \"1\", username: \"@ava\" }\n    }\n  },\n  User: {\n    __resolveReference(user, { fetchUserById }){\n      return fetchUserById(user.id)\n    }\n  }\n};\n\nconst server = new ApolloServer({\n  schema: buildFederatedSchema([{ typeDefs, resolvers }])\n});\n```\n",
  "readmeFilename": "README.md",
  "types": "dist/index.d.ts",
  "version": "0.11.2"
}
